// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

////////////////////////////////////////////////////
// AUTOGENERATED - DO NOT EDIT THIS FILE DIRECTLY //
////////////////////////////////////////////////////

import "forge-std/Script.sol";

import "contracts/periphery/BatchL2DataCreatedRollup.sol";
import {ProxyAdmin} from "@openzeppelin/contracts5/proxy/transparent/ProxyAdmin.sol";
import {
    TransparentUpgradeableProxy,
    ITransparentUpgradeableProxy
} from "@openzeppelin/contracts5/proxy/transparent/TransparentUpgradeableProxy.sol";

abstract contract BatchL2DataCreatedRollupDeployer is Script {
    BatchL2DataCreatedRollup internal batchL2DataCreatedRollup;
    ProxyAdmin internal batchL2DataCreatedRollupProxyAdmin;
    address internal batchL2DataCreatedRollupImplementation;

    function deployBatchL2DataCreatedRollupImplementation() internal returns (address implementation) {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        implementation = address(new BatchL2DataCreatedRollup());
        vm.stopBroadcast();
    }
}
